{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jingw\\\\Desktop\\\\ReactPractice\\\\expressWReact\\\\client\\\\src\\\\context\\\\UserContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({\n  name: \"\",\n  auth: false\n});\n\nfunction UserProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({\n    username: \"\",\n    name: \"\",\n    role: \"\",\n    auth: false,\n    msg: \"\"\n  });\n\n  const login = (username, password) => {\n    fetch(\"/login\", {\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"retrieved data: \" + JSON.stringify(data));\n      setUser(user => ({\n        username: data.username,\n        name: data.name,\n        role: data.role,\n        auth: data.user,\n        msg: data.msg\n      })); //   data.role === \"Lecturer\" ? setlecturerRole(true) : setStudentRole(true);\n      //   data.role === \"Lecturer\"\n      //     ? setLecturerData({ username: data.username, role: data.role, user: data.user })\n      //     : setStudentData({ username: data.username, role: data.role, user: data.user });\n    });\n  };\n\n  const logout = () => {\n    setUser(user => ({\n      username: '',\n      name: '',\n      role: '',\n      auth: false,\n      msg: ''\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"QxThMcoujN0xBPjLKJtAEG1VQ2I=\");\n\n_c = UserProvider;\nexport { UserProvider, UserContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","UserContext","name","auth","UserProvider","children","user","setUser","username","role","msg","login","password","fetch","headers","Accept","method","body","JSON","stringify","then","res","json","data","console","log","logout"],"sources":["C:/Users/jingw/Desktop/ReactPractice/expressWReact/client/src/context/UserContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext({ name: \"\", auth: false });\r\n\r\nfunction UserProvider({ children }) {\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    name: \"\",\r\n    role: \"\",\r\n    auth: false,\r\n    msg: \"\",\r\n  });\r\n\r\n  const login = (username, password) => {\r\n    fetch(\"/login\", {\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"retrieved data: \" + JSON.stringify(data));\r\n\r\n        setUser((user) => ({\r\n          username: data.username,\r\n          name: data.name,\r\n          role: data.role,\r\n          auth: data.user,\r\n          msg: data.msg,\r\n        }));\r\n\r\n        //   data.role === \"Lecturer\" ? setlecturerRole(true) : setStudentRole(true);\r\n        //   data.role === \"Lecturer\"\r\n        //     ? setLecturerData({ username: data.username, role: data.role, user: data.user })\r\n        //     : setStudentData({ username: data.username, role: data.role, user: data.user });\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser((user) => ({\r\n        username: '',\r\n        name: '',\r\n        role: '',\r\n        auth: false,\r\n        msg: '',\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport { UserProvider, UserContext };\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAC;EAAEG,IAAI,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAAD,CAAjC;;AAEA,SAASC,YAAT,OAAoC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAClC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;IAC/BQ,QAAQ,EAAE,EADqB;IAE/BN,IAAI,EAAE,EAFyB;IAG/BO,IAAI,EAAE,EAHyB;IAI/BN,IAAI,EAAE,KAJyB;IAK/BO,GAAG,EAAE;EAL0B,CAAD,CAAhC;;EAQA,MAAMC,KAAK,GAAG,CAACH,QAAD,EAAWI,QAAX,KAAwB;IACpCC,KAAK,CAAC,QAAD,EAAW;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,mCADD;QAEP,gBAAgB;MAFT,CADK;MAKdC,MAAM,EAAE,MALM;MAMdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEX,QAAF;QAAYI;MAAZ,CAAf;IANQ,CAAX,CAAL,CAQGQ,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CASSG,IAAD,IAAU;MACdC,OAAO,CAACC,GAAR,CAAY,qBAAqBP,IAAI,CAACC,SAAL,CAAeI,IAAf,CAAjC;MAEAhB,OAAO,CAAED,IAAD,KAAW;QACjBE,QAAQ,EAAEe,IAAI,CAACf,QADE;QAEjBN,IAAI,EAAEqB,IAAI,CAACrB,IAFM;QAGjBO,IAAI,EAAEc,IAAI,CAACd,IAHM;QAIjBN,IAAI,EAAEoB,IAAI,CAACjB,IAJM;QAKjBI,GAAG,EAAEa,IAAI,CAACb;MALO,CAAX,CAAD,CAAP,CAHc,CAWd;MACA;MACA;MACA;IACD,CAxBH;EAyBD,CA1BD;;EA4BA,MAAMgB,MAAM,GAAG,MAAM;IACnBnB,OAAO,CAAED,IAAD,KAAW;MACfE,QAAQ,EAAE,EADK;MAEfN,IAAI,EAAE,EAFS;MAGfO,IAAI,EAAE,EAHS;MAIfN,IAAI,EAAE,KAJS;MAKfO,GAAG,EAAE;IALU,CAAX,CAAD,CAAP;EAOD,CARD;;EAUA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEJ,IAAF;MAAQK,KAAR;MAAee;IAAf,CAA7B;IAAA,UACGrB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GApDQD,Y;;KAAAA,Y;AAsDT,SAASA,YAAT,EAAuBH,WAAvB"},"metadata":{},"sourceType":"module"}