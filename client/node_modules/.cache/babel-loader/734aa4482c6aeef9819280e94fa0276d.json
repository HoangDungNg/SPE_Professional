{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jingw\\\\Desktop\\\\ReactPractice\\\\expressWReact\\\\client\\\\src\\\\context\\\\UserContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext({\n  name: \"\",\n  auth: false\n});\n\nfunction UserProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({\n    username: \"\",\n    role: \"\",\n    auth: false\n  });\n\n  const login = (username, password) => {\n    fetch(\"/login\", {\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (data) {\n        setUser(user => ({\n          username: data.username,\n          role: data.role,\n          auth: data.user\n        }));\n      } else {\n        setUser(user => ({\n          username: data.username,\n          role: data.role,\n          auth: data.user\n        }));\n      } //   data.role === \"Lecturer\" ? setlecturerRole(true) : setStudentRole(true);\n      //   data.role === \"Lecturer\"\n      //     ? setLecturerData({ username: data.username, role: data.role, user: data.user })\n      //     : setStudentData({ username: data.username, role: data.role, user: data.user });\n\n    });\n  };\n\n  const logout = () => {\n    setUser(user => ({\n      name: \"\",\n      auth: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"94i7JqZFbLauEyRpTdCsUu/2xbM=\");\n\n_c = UserProvider;\nexport { UserProvider, UserContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","UserContext","name","auth","UserProvider","children","user","setUser","username","role","login","password","fetch","headers","Accept","method","body","JSON","stringify","then","res","json","data","console","log","logout"],"sources":["C:/Users/jingw/Desktop/ReactPractice/expressWReact/client/src/context/UserContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext({ name: \"\", auth: false });\r\n\r\nfunction UserProvider({ children }) {\r\n  const [user, setUser] = useState({ username: \"\", role: \"\", auth: false });\r\n\r\n  const login = (username, password) => {\r\n    fetch(\"/login\", {\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ username, password }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if(data) {\r\n        setUser((user) => ({\r\n            username: data.username,\r\n            role: data.role,\r\n            auth: data.user,\r\n          }));\r\n        }\r\n        else{\r\n            setUser((user) => ({\r\n                username: data.username,\r\n                role: data.role,\r\n                auth: data.user,\r\n                }));\r\n        }\r\n        //   data.role === \"Lecturer\" ? setlecturerRole(true) : setStudentRole(true);\r\n        //   data.role === \"Lecturer\"\r\n        //     ? setLecturerData({ username: data.username, role: data.role, user: data.user })\r\n        //     : setStudentData({ username: data.username, role: data.role, user: data.user });\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser((user) => ({\r\n      name: \"\",\r\n      auth: false,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport { UserProvider, UserContext };\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAC;EAAEG,IAAI,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAAD,CAAjC;;AAEA,SAASC,YAAT,OAAoC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAClC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;IAAEQ,QAAQ,EAAE,EAAZ;IAAgBC,IAAI,EAAE,EAAtB;IAA0BN,IAAI,EAAE;EAAhC,CAAD,CAAhC;;EAEA,MAAMO,KAAK,GAAG,CAACF,QAAD,EAAWG,QAAX,KAAwB;IACpCC,KAAK,CAAC,QAAD,EAAW;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,mCADD;QAEP,gBAAgB;MAFT,CADK;MAKdC,MAAM,EAAE,MALM;MAMdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAEV,QAAF;QAAYG;MAAZ,CAAf;IANQ,CAAX,CAAL,CAQGQ,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CASSG,IAAD,IAAU;MACdC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;MACA,IAAGA,IAAH,EAAS;QACTf,OAAO,CAAED,IAAD,KAAW;UACfE,QAAQ,EAAEc,IAAI,CAACd,QADA;UAEfC,IAAI,EAAEa,IAAI,CAACb,IAFI;UAGfN,IAAI,EAAEmB,IAAI,CAAChB;QAHI,CAAX,CAAD,CAAP;MAKC,CAND,MAOI;QACAC,OAAO,CAAED,IAAD,KAAW;UACfE,QAAQ,EAAEc,IAAI,CAACd,QADA;UAEfC,IAAI,EAAEa,IAAI,CAACb,IAFI;UAGfN,IAAI,EAAEmB,IAAI,CAAChB;QAHI,CAAX,CAAD,CAAP;MAKH,CAfa,CAgBd;MACA;MACA;MACA;;IACD,CA7BH;EA8BD,CA/BD;;EAiCA,MAAMmB,MAAM,GAAG,MAAM;IACnBlB,OAAO,CAAED,IAAD,KAAW;MACjBJ,IAAI,EAAE,EADW;MAEjBC,IAAI,EAAE;IAFW,CAAX,CAAD,CAAP;EAID,CALD;;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEG,IAAF;MAAQI,KAAR;MAAee;IAAf,CAA7B;IAAA,UACGpB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAhDQD,Y;;KAAAA,Y;AAkDT,SAASA,YAAT,EAAuBH,WAAvB"},"metadata":{},"sourceType":"module"}